openapi: 3.0.3
info:
  title: Alle Task Management API
  description: |
    REST API for Alle, a minimalist to-do list and planning application.

    This API provides endpoints for managing tasks with full CRUD operations.
    The server also provides a GraphQL API at `/graphql` (see api.md for GraphQL documentation).
  version: 1.0.0
  contact:
    name: Alle Project
  license:
    name: GPL-3.0-or-later

servers:
  - url: http://localhost:8000
    description: Local development server

tags:
  - name: tasks
    description: Task management operations

paths:
  /api/tasks:
    get:
      tags:
        - tasks
      summary: Get all tasks
      description: Retrieves a list of all tasks
      operationId: getAllTasks
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
              examples:
                taskList:
                  summary: Example task list
                  value:
                    - id: 1
                      title: "Complete project documentation"
                      completed: false
                      created_at: "2025-10-24 00:00:00.000000000 UTC"
                      updated_at: "2025-10-24 00:00:00.000000000 UTC"
                    - id: 2
                      title: "Review pull requests"
                      completed: true
                      created_at: "2025-10-23 10:30:00.000000000 UTC"
                      updated_at: "2025-10-24 12:15:00.000000000 UTC"
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - tasks
      summary: Create a new task
      description: Creates a new task with the provided title
      operationId: createTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
            examples:
              simpleTask:
                summary: Simple task
                value:
                  title: "New task to complete"
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
              examples:
                createdTask:
                  summary: Created task response
                  value:
                    id: 1
                    title: "New task to complete"
                    completed: false
                    created_at: "2025-10-24 00:00:00.000000000 UTC"
                    updated_at: "2025-10-24 00:00:00.000000000 UTC"
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/tasks/incomplete:
    get:
      tags:
        - tasks
      summary: Get incomplete tasks
      description: Retrieves a list of all incomplete tasks
      operationId: getIncompleteTasks
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
              examples:
                incompleteTasks:
                  summary: Example incomplete tasks
                  value:
                    - id: 1
                      title: "Complete project documentation"
                      completed: false
                      created_at: "2025-10-24 00:00:00.000000000 UTC"
                      updated_at: "2025-10-24 00:00:00.000000000 UTC"
                    - id: 3
                      title: "Fix bug in authentication"
                      completed: false
                      created_at: "2025-10-24 08:00:00.000000000 UTC"
                      updated_at: "2025-10-24 08:00:00.000000000 UTC"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/tasks/{id}:
    parameters:
      - $ref: '#/components/parameters/TaskId'

    get:
      tags:
        - tasks
      summary: Get task by ID
      description: Retrieves a specific task by its ID
      operationId: getTaskById
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
              examples:
                task:
                  summary: Example task
                  value:
                    id: 1
                    title: "Complete project documentation"
                    completed: false
                    created_at: "2025-10-24 00:00:00.000000000 UTC"
                    updated_at: "2025-10-24 00:00:00.000000000 UTC"
        '400':
          description: Invalid ID provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                invalidId:
                  value:
                    error: "Invalid ID"
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                notFound:
                  value:
                    error: "Task not found"
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      tags:
        - tasks
      summary: Update task
      description: Updates an existing task. Both title and completed fields are optional.
      operationId: updateTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
            examples:
              updateTitle:
                summary: Update title only
                value:
                  title: "Updated task title"
              markComplete:
                summary: Mark as completed
                value:
                  completed: true
              updateBoth:
                summary: Update both fields
                value:
                  title: "Updated task title"
                  completed: true
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
              examples:
                updatedTask:
                  summary: Updated task response
                  value:
                    id: 1
                    title: "Updated task title"
                    completed: true
                    created_at: "2025-10-24 00:00:00.000000000 UTC"
                    updated_at: "2025-10-24 12:30:00.000000000 UTC"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                notFound:
                  value:
                    error: "Task not found"
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - tasks
      summary: Delete task
      description: Deletes a task by its ID
      operationId: deleteTask
      responses:
        '204':
          description: Task deleted successfully
        '400':
          description: Invalid ID provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                invalidId:
                  value:
                    error: "Invalid ID"
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                notFound:
                  value:
                    error: "Task not found"
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    Task:
      type: object
      required:
        - id
        - title
        - completed
        - created_at
        - updated_at
      properties:
        id:
          type: integer
          format: int32
          description: Unique identifier for the task
          example: 1
        title:
          type: string
          description: Task title
          example: "Complete project documentation"
        completed:
          type: boolean
          description: Whether the task is completed
          example: false
        created_at:
          type: string
          description: Timestamp when the task was created
          example: "2025-10-24 00:00:00.000000000 UTC"
        updated_at:
          type: string
          description: Timestamp when the task was last updated
          example: "2025-10-24 00:00:00.000000000 UTC"

    CreateTaskRequest:
      type: object
      required:
        - title
      properties:
        title:
          type: string
          description: Title for the new task
          minLength: 1
          example: "New task to complete"

    UpdateTaskRequest:
      type: object
      properties:
        title:
          type: string
          description: New title for the task (optional)
          example: "Updated task title"
        completed:
          type: boolean
          description: New completion status for the task (optional)
          example: true
      minProperties: 1
      description: At least one field must be provided

    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: Error message
          example: "Task not found"

  parameters:
    TaskId:
      name: id
      in: path
      required: true
      description: Task ID
      schema:
        type: integer
        format: int32
        minimum: 1
      example: 1

  responses:
    BadRequest:
      description: Bad request - invalid input
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            invalidJson:
              summary: Invalid JSON
              value:
                error: "Invalid JSON: expected value at line 1 column 1"
            invalidId:
              summary: Invalid ID
              value:
                error: "Invalid ID"

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            serverError:
              summary: Server error
              value:
                error: "Database connection failed"
