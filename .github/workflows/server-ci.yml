name: Server CI

on:
  push:
    branches: [main, dev, test]
    paths:
      - 'packages/server/**'
      - '.github/workflows/server-ci.yml'
  pull_request:
    branches: [main, dev, test]
    paths:
      - 'packages/server/**'
      - '.github/workflows/server-ci.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./packages/server

    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt, clippy

      - name: Check formatting
        run: cargo fmt --check

      - name: Run Clippy
        run: cargo clippy -- -D warnings

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./packages/server

    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Run unit tests
        run: cargo test --lib --bins --verbose

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./packages/server

    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Start test databases
        run: docker-compose -f docker-compose.test.yml up -d

      - name: Wait for databases to be ready
        run: |
          echo "Waiting for PostgreSQL..."
          timeout 60 bash -c 'until docker exec alle-postgres-test pg_isready -U alle_test; do sleep 1; done'
          echo "Waiting for MySQL..."
          timeout 60 bash -c 'until docker exec alle-mysql-test mysqladmin ping -h localhost -u alle_test -ptest_password --silent; do sleep 1; done'

      - name: Run integration tests
        run: cargo test --test '*' --verbose

      - name: Stop test databases
        if: always()
        run: docker-compose -f docker-compose.test.yml down -v

  build:
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./packages/server

    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Build
        run: cargo build --release --verbose
